name: CI/CD Pipeline API controle-lancamentos

# Eventos que disparam o workflow
on:
  pull_request:
    branches: [ "master-controle-lancamentos" ]
  push:
    branches: [ "master-controle-lancamentos" ]    
    
# Variáveis de ambiente
env: 
  DOTNET_VERSION: "9.0.100" # Use exact version instead of "9.0.x"
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  BUILD_CONFIGURATION: "Release"  
  
jobs:
  # Job de Integração Contínua (CI)
  ci:
    name: Integração Contínua
    runs-on: ubuntu-latest
    
    steps:
    # Checkout do código
    - name: Checkout do repositório
      uses: actions/checkout@v4
      with:
        fetch-depth: 0      

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}        
    
    # Configurar ambiente .NET
    - name: Configurar .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    # Cache de dependências
    - name: Cache de dependências
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-        
    
    # Restaurar dependências
    - name: Restaurar dependências
      run: dotnet restore
    
    # Construir projeto
    - name: Construir projeto
      run: dotnet build --no-restore -c ${{ env.BUILD_CONFIGURATION }} --verbosity normal
      env:
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
        DOTNET_NOLOGO: true
        
    # Executar testes
    - name: Executar testes
      run: |
        dotnet test --no-build -c ${{ env.BUILD_CONFIGURATION }} \
          --verbosity normal \
          --logger "console;verbosity=normal" \
          --blame-hang \
          --blame-hang-timeout 2m
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1